@model IEnumerable<MVCLabTaskLayout.Models.Student>
@{
    ViewBag.Title = "Display Students";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- External CSS/JS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js"></script>
<script>AOS.init({ duration: 1000, once: true });</script>

<style>
    body {
        background: linear-gradient(135deg, #00F260, #0575E6, #FF512F, #DD2476);
        color: #f1f1f1;
    }

    .container-glass {
        backdrop-filter: blur(12px);
        background: rgba(255, 255, 255, 0.05);
        border-radius: 16px;
        padding: 25px;
        box-shadow: 0 0 40px rgba(0, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    h2.title {
        font-size: 2.8rem;
        color: #00ffe5;
        text-align: center;
        margin-bottom: 30px;
        text-shadow: 0 0 10px black;
    }

    .filter-group {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        margin-bottom: 30px;
        padding: 15px 10px;
        background: rgba(0, 0, 0, 0.3);
        border-radius: 12px;
        box-shadow: 0 0 20px rgba(0, 255, 255, 0.2);
    }

        .filter-group input,
        .filter-group select {
            background: rgba(0, 0, 0, 0.6);
            border: 2px solid #00ffe5;
            border-radius: 10px;
            padding: 10px 15px;
            color: #ffffff;
            font-size: 15px;
            font-weight: bold;
            min-width: 200px;
            transition: 0.3s ease;
            box-shadow: 0 0 10px rgba(0, 255, 255, 0.15);
        }

            .filter-group input::placeholder {
                color: #aefcff;
                opacity: 0.8;
            }

            .filter-group select option {
                color: #fff;
                background-color: #333;
            }

            .filter-group select:hover,
            .filter-group input:hover,
            .filter-group select:focus,
            .filter-group input:focus {
                background: rgba(0, 0, 0, 0.8);
                outline: none;
                box-shadow: 0 0 12px rgba(0, 255, 255, 0.6);
                transform: scale(1.03);
            }


    option {
        background-color: #222;
        color: #fff;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        table-layout: fixed;
        word-wrap: break-word;
    }

    th, td {
        padding: 12px;
        text-align: center;
        vertical-align: middle;
    }




    thead th {
        position: sticky;
        top: 0;
        z-index: 2;
        background: linear-gradient(135deg, #4b0082, #8a2be2); /* Indigo to BlueViolet */
        color: white;
        font-weight: bold;
        text-shadow: 0 0 3px #fff;
        transition: all 0.3s ease-in-out;
        border-bottom: 1px solid #00ffe5;
    }

        thead th:hover {
            background: linear-gradient(135deg, #ff00cc, #3333ff); /* Neon Pink to Electric Blue */
            color: #fff;
            box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
            cursor: default;
        }




    td {
        background-color: rgba(255, 255, 255, 0.03);
        border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        color: #fff;
        word-break: break-word;
    }

    tbody tr:hover {
        background: rgba(0, 255, 255, 0.08);
        box-shadow: inset 0 0 12px rgba(0, 255, 255, 0.4);
        transform: scale(1.015);
        transition: all 0.3s ease-in-out;
    }

    td:nth-child(3), td:nth-child(11) {
        max-width: 180px;
        word-break: break-word;
        white-space: normal;
    }

    .btn {
        padding: 6px 12px;
        border-radius: 8px;
        font-weight: bold;
        transition: 0.3s ease;
        border: none;
        font-size: 14px;
    }

    .btn-edit {
        background: linear-gradient(to right, #ffe600, #ffc107);
        color: black;
    }

    .btn-view {
        background: linear-gradient(to right, #00c6ff, #0072ff);
        color: white;
    }

    .btn-delete {
        background: linear-gradient(to right, #ff4e50, #f44336);
        color: white;
    }

    .btn:hover {
        transform: scale(1.05);
        box-shadow: 0 0 10px rgba(255,255,255,0.3);
    }

    .btn-add {
        background: linear-gradient(to right, #32cd32, #00b894);
        color: white;
        display: block;
        margin: 30px auto 0;
        padding: 12px 25px;
        font-size: 16px;
        border-radius: 25px;
        text-decoration: none;
        text-align: center;
        transition: 0.3s ease;
        box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
    }

        .btn-add:hover {
            transform: scale(1.08);
            box-shadow: 0 0 25px rgba(0, 255, 255, 0.6);
        }

    .fee-status {
        font-weight: bold;
        padding: 4px 10px;
        border-radius: 20px;
        text-transform: uppercase;
        font-size: 13px;
        display: inline-block;
        box-shadow: 0 0 10px rgba(255,255,255,0.1);
        transition: 0.3s ease;
    }

        .fee-status.paid {
            background: linear-gradient(45deg, #00ff87, #1affd5);
            color: #000;
            box-shadow: 0 0 12px #00ffbf;
        }

        .fee-status.unpaid {
            background: linear-gradient(45deg, #ff5f6d, #ffc371);
            color: #000;
            box-shadow: 0 0 12px #ff4d4d;
        }

    ::-webkit-scrollbar {
        height: 8px;
    }

    ::-webkit-scrollbar-thumb {
        background: #00ffe5;
        border-radius: 10px;
    }
</style>

<script>
    function filterStudents() {
        const name = document.getElementById("nameSearch").value.toLowerCase();
        const id = document.getElementById("idSearch").value.toLowerCase();
        const gender = document.getElementById("genderFilter").value;
        const fee = document.getElementById("feeFilter").value;

        document.querySelectorAll("tbody tr").forEach(row => {
            const rId = row.cells[0].innerText.toLowerCase();
            const rName = row.cells[1].innerText.toLowerCase();
            const rGender = row.cells[4].innerText.trim();
            const rFee = row.cells[11].querySelector("span")?.innerText.trim();

            const show = rId.includes(id) &&
                rName.includes(name) &&
                (gender === "" || rGender === gender) &&
                (fee === "" || rFee === fee);

            row.style.display = show ? "" : "none";
        });
    }
</script>

<div class="container-glass" data-aos="fade-up">
    <h2 style="color:black" class="title">
        <i class="fas fa-user-graduate"></i> Student Records
    </h2>

    <div class="filter-group" data-aos="fade-down">
        <input  type="text" id="idSearch" placeholder="Student ID..." onkeyup="filterStudents()" />
        <input type="text" id="nameSearch" placeholder="Name..." onkeyup="filterStudents()" />
        <select id="genderFilter" onchange="filterStudents()">
            <option value="">-- Gender --</option>
            <option>Male</option>
            <option>Female</option>
            <option>Other</option>
        </select>
        <select id="feeFilter" onchange="filterStudents()">
            <option value="">-- Fee Status --</option>
            <option>Paid</option>
            <option>Unpaid</option>
        </select>
    </div>

    <table>
        <thead >
            <tr  >
                <th >@Html.DisplayNameFor(model => model.StudentId)</th>
                <th>@Html.DisplayNameFor(model => model.Name)</th>
                <th>@Html.DisplayNameFor(model => model.EmailAddress)</th>
                <th>@Html.DisplayNameFor(model => model.Mobile)</th>
                <th>@Html.DisplayNameFor(model => model.Gender)</th>
                <th>@Html.DisplayNameFor(model => model.DateOfRegistration)</th>
                <th>@Html.DisplayNameFor(model => model.CourseId)</th>
                <th>@Html.DisplayNameFor(model => model.Course.Name)</th>
                <th>@Html.DisplayNameFor(model => model.Course.Fees)</th>
                <th>@Html.DisplayNameFor(model => model.Course.Duration)</th>
                <th>@Html.DisplayNameFor(model => model.Address)</th>
                <th>@Html.DisplayNameFor(model => model.FeeStatus)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var s in Model)
            {
                <tr data-aos="fade-up">
                    <td style="color:black">@s.StudentId</td>
                    <td style="color:black">@s.Name</td>
                    <td style="color:black">@s.EmailAddress</td>
                    <td style="color:black">@s.Mobile</td>
                    <td style="color:black">@s.Gender</td>
                    <td style="color:black">@s.DateOfRegistration.ToShortDateString()</td>
                    <td style="color:black">@s.CourseId</td>
                    <td style="color:black">@s.Course.Name</td>
                    <td style="color:black">@s.Course.Fees</td>
                    <td style="color:black">@s.Course.Duration</td>
                    <td style="color:black">@s.Address</td>
                    <td>
                        <span class="fee-status @s.FeeStatus.ToLower()">@s.FeeStatus</span>
                    </td>
                    <td>
                        <div class="d-flex justify-content-center gap-1 flex-wrap">
                            <a class="btn btn-edit" href="@Url.Action("EditStudent", new { id = s.StudentId })"><i class="fas fa-pen"></i></a>
                            <a class="btn btn-view" href="@Url.Action("DisplayStudent", new { id = s.StudentId })"><i class="fas fa-eye"></i></a>
                            <a class="btn btn-delete" onclick="return confirm('Are you sure?');" href="@Url.Action("DeleteStudent", new { id = s.StudentId })"><i class="fas fa-trash"></i></a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <a class="btn-add" href="@Url.Action("Apply", "Admissions")">
        <i class="fas fa-plus-circle"></i> Add New Student
    </a>
</div>
